<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace: 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="pointMapper">
	
	<resultMap type="Point" id="pointResult">
		<result column="POINT_NO" property="pointNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="POINT" property="point"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="STATUS" property="status"/>
		<result column="POINT_TYPE" property="pointType"/>
		<result column="ADMIN_NO" property="adminNo"/>
		<result column="POINT_INFO" property="pointInfo"/>
	</resultMap>
	
	<resultMap type="Payment" id="paymentResult">
		<result column="PAYMENT_NO" property="paymentNo"/>
		<result column="CLUB_NO" property="clubNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="POINT" property="point"/>
		<result column="PAYMENT_DATE" property="paymentDate"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<resultMap type="SumPointDTO" id="sumPointDTOResult">
		<result column="count" property="count"/>
		<result column="sumPoint" property="sumPoint"/>
	</resultMap>
	
	<insert id="insertPayment">
		INSERT INTO
				PAYMENT (
						 payment_no,
						 club_no,
						 user_no,
						 point
						 )
				VALUES (
						NEXTVAL('SEQ_PMNO'),
						#{clubNo},
						#{userNo},
						#{point}
						)
	</insert>

	<insert id="chargePoint">
		INSERT INTO
			POINT (
					 point_no,
					 user_no,
					 point,
					 status
					 )
			VALUES (
					NEXTVAL('SEQ_PNO'),
					#{userNo},
					#{point},
					'D'
					)
	</insert>

	<insert id="withdrawPoint">
		INSERT INTO
			POINT (
					 point_no,
					 user_no,
					 point,
					 status
					 )
			VALUES (
					NEXTVAL('SEQ_PNO'),
					#{userNo},
					#{point},
					'W'
					)
	</insert>
	
	<select id="selectPointChargeList" resultMap="pointResult">
		SELECT POINT_NO,
		       POINT,
		       CREATE_DATE,
		       STATUS
		FROM POINT
		WHERE (STATUS = 'D' OR STATUS = 'C')
		  AND DATE_TRUNC('month', CREATE_DATE) = DATE_TRUNC('month', TO_DATE(#{strMonth}, 'YYYY-MM'))
		  AND USER_NO = #{userNo}
		ORDER BY POINT_NO DESC;
	</select>
	
	<select id="sumPointMonth" resultType="_int">
		SELECT COALESCE(SUM(point), 0)
		FROM POINT
		WHERE (STATUS = 'D' OR STATUS = 'C')
		AND DATE_TRUNC('month', CREATE_DATE) = DATE_TRUNC('month', TO_DATE(#{strMonth}, 'YYYY-MM'))
		AND USER_NO = #{userNo}
	</select>
	
	<select id="totalChargePoint" resultType="_int">
		SELECT COALESCE(SUM(point), 0)
		FROM POINT
		WHERE (STATUS = 'D' OR STATUS = 'C')
		AND USER_NO = #{userNo}
	</select>
	
	<select id="selectPointWithDrawList" resultMap="pointResult">
		SELECT POINT_NO,
		       POINT,
		       CREATE_DATE,
		       STATUS
		FROM POINT
		WHERE STATUS = 'W'
		  AND DATE_TRUNC('month', CREATE_DATE) = DATE_TRUNC('month', TO_DATE(#{strMonth}, 'YYYY-MM'))
		  AND USER_NO = #{userNo}
		ORDER BY POINT_NO DESC;
	</select>
	
	<select id="totalWithdrawPoint" resultType="_int">
		SELECT COALESCE(SUM(point), 0)
		FROM POINT
		WHERE (STATUS = 'W')
		AND USER_NO = #{userNo}
	</select>
	
	<select id="sumWithdrawPointMonth" resultType="_int">
		SELECT COALESCE(SUM(point), 0)
		FROM POINT
		WHERE (STATUS = 'W')
		AND DATE_TRUNC('month', CREATE_DATE) = DATE_TRUNC('month', TO_DATE(#{strMonth}, 'YYYY-MM'))
		AND USER_NO = #{userNo}
	</select>
	
	<select id="selectPointUseList" resultMap="paymentResult">
		SELECT PAYMENT_NO,
			   P.CLUB_NO,
		       POINT,
		       PAYMENT_DATE,
		       P.STATUS,
		       CLUB_TITLE,
		       CLUB_TYPE
		FROM PAYMENT P
		JOIN CLUB USING (CLUB_NO)
		WHERE P.STATUS = 'Y'
		  AND DATE_TRUNC('month', PAYMENT_DATE) = DATE_TRUNC('month', TO_DATE(#{strMonth}, 'YYYY-MM'))
		  AND P.USER_NO = #{userNo}
		ORDER BY PAYMENT_NO DESC;
	</select>
	
	<select id="useTotalPoint" resultType="_int">
		SELECT COALESCE(SUM(point), 0)
		FROM PAYMENT
		WHERE (STATUS = 'Y')
		AND USER_NO = #{userNo}
	</select>
	
	<select id="sumUsePoint" resultType="_int">
		SELECT COALESCE(SUM(point), 0)
		FROM PAYMENT
		WHERE (STATUS = 'Y')
		AND DATE_TRUNC('month', PAYMENT_DATE) = DATE_TRUNC('month', TO_DATE(#{strMonth}, 'YYYY-MM'))
		AND USER_NO = #{userNo}
	</select>
	
	<insert id="insertPointAdmin">
		INSERT INTO
			POINT (
					 point_no,
					 user_no,
					 point,
					 status,
					 admin_no,
					 point_info
					 )
			VALUES (
					NEXTVAL('SEQ_PNO'),
					#{userNo},
					#{point},
					#{status},
					#{adminNo},
					#{pointInfo}
					)
	</insert>
	
	<select id="selectListPointAdmin" resultMap="pointResult">
		SELECT POINT_NO,
			   USER_NO,
			   POINT,
			   CREATE_DATE,
			   STATUS,
			   ADMIN_NO,
			   POINT_INFO
		FROM POINT
		WHERE STATUS = 'P' OR STATUS = 'M'
		ORDER BY POINT_NO DESC
	</select>
	
	<select id="selectPointAdminListCount" resultType="_int">
		SELECT COUNT(*)
		FROM POINT
		WHERE STATUS = 'P' OR STATUS = 'M'
	</select>
	
	<insert id="chargePointType">
		INSERT INTO
			POINT (
					 point_no,
					 user_no,
					 point,
					 status,
					 point_type
					 )
			VALUES (
					NEXTVAL('SEQ_PNO'),
					#{m.userNo},
					#{m.point},
					'D',
					#{pointType}
					)
	</insert>
	
	<select id="selectPayment" resultMap="paymentResult">
		select payment_no,
			   user_no,
			   point
		from payment
		where status = 'Y' and 
			payment_no = #{paymentNo}
	</select>
	
	<update id="returnPoint">
		update member
		set point = point + #{point}
		where user_no = #{userNo}
	</update>
	
	<update id="cancelPayment">
		update payment
		set status = 'C'
		where payment_no = #{paymentNo}
	</update>
	
	<select id="sumAllChargePoint" resultMap="sumPointDTOResult">
		select count(*) as count, sum(point) as sumPoint
		from point
		where status = #{stauts}
	</select>
</mapper>